class Solution {
    Set<String> ban = new HashSet<>();
    Map<String, Integer> words = new TreeMap<>(Collections.reverseOrder());
    
    boolean valid(char ch){
        return ((ch>='a' && ch<='z') || (ch<='9' && ch>='0'));
    }
    
    public String mostCommonWord(String para, String[] banned) {
        for(String word : banned) ban.add(word);
        para = para.toLowerCase();
        int i=0;
        while(i<para.length()){
            if(!valid(para.charAt(i))){
                i++; continue;
            }
            int j=i+1;
            while(j<para.length() && valid(para.charAt(j))) j++;
            String temp = para.substring(i,j);
            if(!words.containsKey(temp)) words.put(temp, 1);
            else words.put(temp, words.get(temp)+1);
            i=j;
        }
        String res="";
        int count = 0;
        for(Map.Entry<String, Integer> rec : words.entrySet()){
            if(!ban.contains(rec.getKey()) && count<rec.getValue()){
                count = rec.getValue();
                res = rec.getKey();
            }            
        }
        return res;
    }
}