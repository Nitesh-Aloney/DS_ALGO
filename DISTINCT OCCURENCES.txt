Given two strings S and T of length n and m respectively. find count of distinct occurrences of T in S as a sub-sequence. 

Example 1:
Input:
S = "banana" , T = "ban"
Output: 3
Explanation: There are 3 sub-sequences:
[ban], [ba n], [b an].


import java.util.*;
class Distinct_Occurrences
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		sc.nextLine();
		while(t>0)
		{
			String line = sc.nextLine();
			String S = line.split(" ")[0];
			String T = line.split(" ")[1];
			
			GfG g = new GfG();
			System.out.println(g.subsequenceCount(S,T));
			t--;
		}
	}
}

class GfG
{
    int max = 1000000007;
    int  subsequenceCount(String S, String T)
    {
        int r = T.length()+1, c = S.length()+1;
        int[][] rec = new int[r][c];
        for(int i=0; i < c; i++) rec[0][i] = 1;
        for(int i=1; i < r; i++){
            for(int j = 1; j<c; j++){
                if(T.charAt(i-1)==S.charAt(j-1)){
                    rec[i][j] = (rec[i-1][j-1]+rec[i][j-1])%max;
                }else{
                    rec[i][j] = (rec[i][j-1])%max;
                }
            }
        }
        // for(int i=0; i < r; i++) System.out.println(Arrays.toString(rec[i]));
        return rec[r-1][c-1];
    }
}