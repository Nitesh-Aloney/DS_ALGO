Given a string S containing only digits, Your task is to complete the function genIp() which returns a vector containing all possible combination of valid IPv4 ip address and takes only a string S as its only argument.
Note : Order doesn't matter.

For string 11211 the ip address possible are 
1.1.2.11
1.1.21.1
1.12.1.1
11.2.1.1

Example 1:

Input:
S = 1111
Output: 1.1.1.1

Your Task:

Your task is to complete the function genIp() which returns a vector containing all possible combination of valid IPv4 ip address in sorted order and takes only a string S as its only argument.

Expected Time Complexity: O(N * N * N * N)
Expected Auxiliary Space: O(N * N * N * N)

Constraints:
1<=N<=16
here, N = length of S.
S only contains digits(i.e. 0-9)


import java.util.*;
class GenIP {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            String s = sc.next();
            Solution sln = new Solution();
            ArrayList<String> str = sln.genIp(s);
            Collections.sort(str);
            for (String u : str) {
                System.out.println(u);
            }
        }
    }
}// } Driver Code Ends


/*complete the Function*/

class Solution {
    ArrayList<String> res = new ArrayList<String>();
    void func(String st, int s, int e, String rec, int count){
        // System.out.println(rec+" - "+count+" s:"+s+" :e"+e);
        if(count==0 && s==e){
            res.add(rec.substring(1));
        }else{
            if(s+1<=e){
                String s1 = st.substring(s,s+1);
                func(st, s+1, e, rec+"."+s1, count-1);
            }
            if(s+2<=e){
                String s2 = st.substring(s,s+2);
                if(Integer.parseInt(s2)>=10) func(st, s+2, e, rec+"."+s2, count-1);
            }
            if(s+3<=e){
                String s3 = st.substring(s,s+3);
                int s_3 = Integer.parseInt(s3);
                if(s_3>=100 && s_3<=255) func(st, s+3, e, rec+"."+s3, count-1);
            }
        }
    }
    public ArrayList<String> genIp(String s) {
        int n = s.length();
        func(s, 0, n, "", 4);
        // System.out.println(res);
        return res;
    }
}