Given three strings A, B and C your task is to complete the function isInterleave which returns true if C is an interleaving of A and B else returns false. C is said to be interleaving A and B, if it contains all characters of A and B and order of all characters in individual strings is preserved.

Example 1:

Input:
A = YX, B = X, C = XXY
Output: 0
Explanation: XXY is not interleaving
of YX and X
Example 2:

Input:
A = XY, B = X, C = XXY
Output: 1
Explanation: XXY is interleaving of
XY and X.


import java.util.*;
import java.lang.*;
class InterLeaveString
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t>0)
        {
            String a =sc.next();
            String b = sc.next();
            String c = sc.next();
            GfG g=new GfG();
        
            System.out.println(g.isInterLeave(a,b,c)==true?1:0);
            t--;
        }
    }
}

class GfG{
	public boolean isInterLeave(String a,String b,String c){
	    boolean[][] dp = new boolean[a.length()+1][b.length()+1]; 
	    dp[0][0] = true;
	    for(int i=0;i<=a.length();i++){
	        for(int j=0;j<=b.length();j++){
	            if(i==0 && j==0){
	                dp[i][j] = true;
	            }else{
	                if(i-1>=0 && a.charAt(i-1) == c.charAt(i+j-1)) dp[i][j] = dp[i][j] || dp[i-1][j];
    	            	if(j-1>=0 && b.charAt(j-1) == c.charAt(i+j-1)) dp[i][j] = dp[i][j] || dp[i][j-1];
	            }
	        }
	    }
        return dp[a.length()][b.length()];
	}
}

