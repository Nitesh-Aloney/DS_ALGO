Given a string ‘s’, the task is to check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.

Example 1:

Input: s = "ababab"
Output: 1
Explanation: It is contructed by 
appending "ab" 3 times
Example 2:

Input: s = "ababac"
Output: 0
Explanation: Not possible to construct
User Task:
Your task is to complete the function isRepeat() which takes a single string as input and returns 1 if possible to construct, otherwise 0. You do not need to take any input or print anything.

Expected Time Complexity: O(|s|)
Expected Auxiliary Space: O(|s|)

Constraints:
1 <= |s| <= 105


// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String input = read.readLine();
            
            Solution ob = new Solution();
            int result = ob.isRepeat(input);
            
            System.out.println(result);
        }
    }
}

class Solution {
    boolean util(String str, String preFix, int st){
        if(st==str.length()) return true;
        int i=0;
        if(((st+i)<str.length()) && (str.substring(st,st+preFix.length()).equals(preFix)))
            return util(str, preFix, st+preFix.length());
        return false;
    }
    int isRepeat(String s){
        boolean res = false;
        for(int i=s.length()/2-1;i>=0;i--){
            if((s.length())%(i+1) == 0) res |= util(s, s.substring(0,i+1), i+1);
            if(res) return 1;
        }
        return 0;
    }
}