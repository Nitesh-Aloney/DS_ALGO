There is a stack of water glasses in a form of pascal triangle and a person wants to pour the water at the topmost glass, but the capacity of each glass is 1 unit. Overflow takes place in such a way that after 1 unit, 1/2 of remaining unit gets into bottom left glass and other half in bottom right glass.Now the pours K units of water in the topmost glass and wants to know how much water is there in the jth glass of the ith row.

Note: Assume that there are enough glasses in the triangle till no glass overflows. 

Input:
First line of the input contains an integer T denoting the number of test cases and each test case consists of three lines. First line contain an integer K, second line contains an integer i and third line contains an integer j.

Output:
Corresponding to each test case output the remaining amount of water in jth cup of the ith row correct to 6 decimal places.

Constraints:
1 <= T<=20
1 <= K <= 1000
1 <= i <= K
1 <= j<= K

Example:
Input:
1
3 
2
1

Output:
1

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    static void waterOverflow(int x, int y, int k){
        int n = Math.max(x, y);
        double[][] mat = new double[n][n];
        mat[0][0]=k;
        for(int i=1;i<n;i++){
            mat[i][0]=(mat[i-1][0]-1)/2.0;
            mat[i][i]=(mat[i-1][i-1]-1)/2.0;
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<i;j++){
                if((mat[i-1][j]-1)>0) mat[i][j]+=(mat[i-1][j]-1);
                if((mat[i-1][j-1]-1)>0) mat[i][j]+=(mat[i-1][j-1]-1);
                mat[i][j]/=2.0;
            }
        }
        double res = mat[x-1][y-1];
        res=Math.max(res, 0);
        if(res>1) res=1;
        System.out.println(String.format("%.6f",res));
    }
	public static void main (String[] args) {
		Scanner in = new Scanner(System.in);
		int t=in.nextInt();
		while(t-- > 0){
		    int k = in.nextInt(),
		    i=in.nextInt(),
		    j=in.nextInt();
		    waterOverflow(i,j,k);
		}
		in.close();
	}
}