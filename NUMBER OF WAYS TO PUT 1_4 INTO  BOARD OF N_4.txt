Given a value N. In how many ways you can construct a grid of size N x 4 using tiles of size 1 x 4.

Example 1:
Input: N = 1
Output: 1
Explaination: There is only one way.

Example 2:
Input: N = 4
Output: 2

Explaination: The first way can be when all 
the 1 x 4 tiles are arranged horizontally. 
Second way can be when all the 1 x 4 tiles 
are arranged vertically.

Your Task:
You do not need to read input or print anything. Your task is to complete the function arrangeTiles() which takes the value N as input parameter and returns the number of ways to make N x 4 grid using 1 x 4 tiles.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)

Constraints:
1 ≤ N ≤ 80


import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            
            Solution ob = new Solution();
            System.out.println(ob.arrangeTiles(N));
        }
    }
}


class Solution{
    static long arrangeTiles(int n){
        if(n==0) return 0l;
        else if(n<=3) return 1;
        else if(n==4) return 2;
        else{
            long[] rec = new long[n+1];
            rec[0]=0;
            rec[1]=1;
            rec[2]=1;
            rec[3]=1;
            rec[4]=2;
            for(int i=5;i<=n;i++){
                rec[i]=rec[i-1]+rec[i-4];
            }
            return rec[n];
        }
    }
}