You are given an array arr[] of N integers including 0. The task is to find the smallest positive number missing from the array.

Example 1:

Input:
N = 5
arr[] = {1,2,3,4,5}
Output: 6
Explanation: Smallest positive missing 
number is 6.
Example 2:

Input:
N = 5
arr[] = {0,-10,1,3,-20}
Output: 2
Explanation: Smallest positive missing 
number is 2.
Your Task:
The task is to complete the function missingNumber() which returns the smallest positive missing number in the array.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).

Constraints:
1 <= N <= 106
-106 <= arr[i] <= 106




import java.util.*;
class Missing{
    static int missingNumber(int a[], int n){
        int res = n+1;
        for(int i=0;i<n;i++){
            if(a[i]<=0) a[i]=n+2;
        }
        for(int i=0;i<n;i++){
            int ele = Math.abs(a[i]);
            if(ele>n) continue;
            a[ele-1]=-1*Math.abs(a[ele-1]);
        }
        for(int i=0;i<n;i++){
            if(a[i]>0) return i+1;
        }
        
        return res;
    }
    
}

class Main
{   
    public static void main (String[] args) 
    {

		Scanner sc=new Scanner(System.in);
		
        //taking testcases
		int t=sc.nextInt();
		while(t-->0){
		    
		    //input number n
			int n=sc.nextInt();
			int[] arr=new int[n];
			
			//adding elements to the array
			for(int i=0;i<n;i++)
				arr[i]=sc.nextInt();
				
			Missing obj = new Missing();
			
			//calling missingNumber()
			int missing = obj.missingNumber(arr,n);
			System.out.println(missing);
		}
    }
}
