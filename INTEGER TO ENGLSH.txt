Convert a non-negative integer num to its English words representation.

 

Example 1:

Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
Example 4:

Input: num = 1234567891
Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One"
 

Constraints:

0 <= num <= 231 - 1





class Solution {
    String[] name = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"},
             tens = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"},
             tens_1 = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"},
             name_2 = {"Billion", "Million", "Thousand", ""};
    String convert(int h, int t, int o){
        String res = "";
        if(h>0) res = (res+name[h]+" Hundred").trim();
        
        if(t==1) res = (res+" "+tens_1[o]).trim();
        
        else{
            res = (res+" "+tens[t]).trim();
            res = (res+" "+name[o]).trim();
        }
        
        return res;
    }
    public String numberToWords(int num) {
        if(num==0) return "Zero";
        String res = "";
        int k = 4;
        while(k-->0){
            int temp = num%1000;
            String sres = convert(temp/100, (temp/10)%10, temp%10).trim();
            if(!sres.equals("")){
                res = ((sres+" "+name_2[k]).trim() + " " + res).trim();
            }
            num/=1000;
        }        
        return res;
    }
}