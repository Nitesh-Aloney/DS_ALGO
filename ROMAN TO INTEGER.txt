Given a string in roman no format (s)  your task is to convert it to an integer . Various symbols and their values are given below.
I 1
V 5
X 10
L 50
C 100
D 500
M 1000

Example 1:

Input:
s = V
Output: 5
Example 2:

Input:
s = III 
Output: 3
Your Task:
Complete the function romanToDecimal() which takes an string as input parameter and returns the equivalent decimal number. 

Expected Time Complexity: O(|S|), |S| = length of string S.
Expected Auxiliary Space: O(1)

Constraints:
1<=roman no range<=3999



import java.io.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));

        int tc = Integer.parseInt(br.readLine().trim());
        while (tc-- > 0) {
            String roman = br.readLine().trim();
            RomanToNumber rn = new RomanToNumber();
            System.out.println(rn.romanToDecimal(roman));
        }
    }
}// } Driver Code Ends


// User function Template for Java

class RomanToNumber {
    // Finds decimal value of a given roman numeral
    int[] num = {1,4,5,9,10,40,50,90,100,400,500,900,1000};
    String[] sym = {"I","IV","V","IX","X","XL","L","XC","C","CD","D","CM","M"};
    Map<String, Integer> mp =  new HashMap<>();
    
    public int romanToDecimal(String str) {
        for(int i=0;i<=12;i++){
            mp.put(sym[i], num[i]);
        }
        int res = 0, i =0, n=str.length();
        while(i<n){
            if(i<n-1 && mp.containsKey(str.substring(i,i+2))){
                res+=mp.get(str.substring(i,i+2));
                i+=2;
            }else{
                res+=mp.get(str.substring(i,i+1));
                i+=1;
            }
        }
        return res;
    }
}