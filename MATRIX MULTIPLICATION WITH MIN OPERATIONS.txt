// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String input_line[] = in.readLine().trim().split("\\s+");
            int arr[]= new int[N];
            for(int i = 0; i < N; i++)
                arr[i] = Integer.parseInt(input_line[i]);
            
            Solution ob = new Solution();
            System.out.println(ob.matrixMultiplication(N, arr));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static int matrixMultiplication(int m, int a[]){
        int n = m-1;
        int[][] res = new int[n][n];
        for(int i=0;i<n-1;i++){
            res[i][i+1] = a[i]*a[i+1]*a[i+2];
        }
        
        for(int i=3;i<=n;i++){
            for(int j=0;j<n+1-i;j++){
                int k = i+j-1;
                // System.out.println(j+"  "+k);
                res[j][k] = Integer.MAX_VALUE;
                for(int d=j;d<k;d++){
                    res[j][k] = Math.min(res[j][k], res[j][d]+res[d+1][k]+(a[j]*a[d+1]*a[k+1]));
                }
            }
        }
        // for(int i=0;i<n;i++) System.out.println(Arrays.toString(res[i]));
        return res[0][n-1];
    }
}



// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String input_line[] = in.readLine().trim().split("\\s+");
            int arr[]= new int[N];
            for(int i = 0; i < N; i++)
                arr[i] = Integer.parseInt(input_line[i]);
            
            Solution ob = new Solution();
            System.out.println(ob.matrixMultiplication(N, arr));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static int matrixMultiplication(int m, int a[]){
        int n = m-1;
        int[][] res = new int[n][n];
        for(int i=0;i<n-1;i++){
            res[i][i+1] = a[i]*a[i+1]*a[i+2];
        }
        
        for(int i=3;i<=n;i++){
            for(int j=0;j<n+1-i;j++){
                int k = i+j-1;
                // System.out.println(j+"  "+k);
                res[j][k] = Integer.MAX_VALUE;
                for(int d=j;d<k;d++){
                    res[j][k] = Math.min(res[j][k], res[j][d]+res[d+1][k]+(a[j]*a[d+1]*a[k+1]));
                }
            }
        }
        // for(int i=0;i<n;i++) System.out.println(Arrays.toString(res[i]));
        return res[0][n-1];
    }
}