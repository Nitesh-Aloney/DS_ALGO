// { Driver Code Starts
import java.io.*;
import java.lang.*;
import java.util.*;

class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}

class GfG {
    
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim());
		while(t-->0){
            String inputLine[] = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine[0]);
            int w = Integer.parseInt(inputLine[1]);
            Item[] arr = new Item[n];
            inputLine = br.readLine().trim().split(" ");
            for(int i=0, k=0; i<n; i++){
                arr[i] = new Item(Integer.parseInt(inputLine[k++]), Integer.parseInt(inputLine[k++]));
            }
            System.out.println(String.format("%.2f", new solve().fractionalKnapsack(w, arr, n)));
        }
    }
}// } Driver Code Ends

class solve{
    void dis(Item[] arr){
        for(Item ele:arr){
            System.out.print(ele.value+","+ele.weight+"  ");
        }
        System.out.println();
    }
    double fractionalKnapsack(int w, Item arr[], int n) {
        Arrays.sort(arr, new Comparator<Item>(){
            @Override
            public int compare(Item a, Item b){
                return ((0.1*a.value/a.weight)<(0.1*b.value/b.weight)) ? 1 : -1;
            }
        });
        
        int i=0;
        double profit = 0.0;
        while(i<n && w>0){
            if(arr[i].weight>w){
                profit+=(arr[i].value*1.0)*w/arr[i].weight;
                w=0;
            }else{
                profit+=arr[i].value;
                w-=arr[i].weight;
            }
            i++;
        }
        
        return profit;
    }
}