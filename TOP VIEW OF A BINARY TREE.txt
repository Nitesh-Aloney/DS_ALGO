// { Driver Code Starts
//Initial Template for Java


//Contributed by Sudarshan Sharma
import java.util.*;
import java.io.*;
class Node{
    int data;
    Node left,right;
    Node(int d){
        data=d;
        left=right=null;
    }
}


class GfG{
    
    public static void main(String[] args)throws IOException{
        //Scanner sc=new Scanner(System.in);
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        int t=Integer.parseInt(br.readLine());
       
        while(t > 0)
           {
               Queue<Node> q = new LinkedList<>();
        
            int n = Integer.parseInt(br.readLine());
            String input[] = br.readLine().trim().split(" ");
            
            Node root = null;
            int j=0;
            while(n > 0){
            int a1 = Integer.parseInt(input[j]);
            int a2 = Integer.parseInt(input[j+1]);
            char lr = input[j+2].charAt(0);
            j+=3;
            
            if(root == null)
            {
                root = new Node(a1);
                q.add(root);
            }
            
            Node pick = q.peek();
            
            q.remove();
            
            if(lr=='L'){
                pick.left = new Node(a2);
                q.add(pick.left);
            }
            a1 = Integer.parseInt(input[j]);
            a2 = Integer.parseInt(input[j+1]);
            lr = input[j+2].charAt(0);
            j += 3;
            
            if(lr=='R'){
                pick.right = new Node(a2);
                q.add(pick.right);
            }
            
            n-=2;
        }
            new View().topView(root);
            System.out.println();
            t--;
        }
    }
}

   


// } Driver Code Ends


//User function Template for Java



/*class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/
class Vnode{
    Node n;
    int ind;
    Vnode(Node n, int ind){
        this.n = n; this.ind = ind;
    }
}
class View
{
    static void topView(Node root)
    {
        if(root==null) return;
        Map<Integer, Integer> view = new TreeMap<Integer, Integer>();
        Queue<Vnode> q = new LinkedList<>();
        q.add(new Vnode(root, 0));
        view.put(0, root.data);
        while(!q.isEmpty()){
            Vnode x = q.remove();
            if(!view.containsKey(x.ind)) view.put(x.ind, x.n.data);
            if(x.n.left!=null){
                q.add(new Vnode(x.n.left, x.ind-1));
            }
            if(x.n.right!=null){
                q.add(new Vnode(x.n.right, x.ind+1));
                // if(!view.containsKey(x.ind-1)) view.put(x.ind-1, x.n.left.data);
            }
        }
        for(int ele : view.values()) System.out.print(ele+" ");
        
    }
}